class BestBeam():
    """
    Class to handle beamforming results.
    """
    
    def __init__(self, filename):
        """
        Constructor of the object.
        
        Parameters
        ----------
        filename : str
            Path (relative or absolute) to the filename.
        """
        
        self.filename = filename
        self.path, self.file = os.path.split(filename)  # get the relative path
        with open(filename) as f:
            for line in f:
                line = line.strip()  # get rid of whitespace at start and end
                if line.startswith('#'):
                    self._line_parser(line)
                else:
                    break
                    
        self.time, self.fratio, self.baz, self.app_vel = np.loadtxt(
            filename, usecols=range(4)).T
        
        # your code here: (1 line)
        self.bb_wf = obspy.read(os.path.join(path, self.bestbeam))[0]
        
    def _line_parser(self, line):
        key, value = [item.strip('# ') for item in line.split('=')]
        try:  # convert single float value
            value = float(value)
        except ValueError:  # convert multiple float values
            try:
                value = [float(item.strip('() ')) for item in value.split(',')]
            except ValueError:  # leave as tring
                pass

        vars(self)[key] = value